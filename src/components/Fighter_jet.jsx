/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 public/fighter_jet.glb
Author: VertaScan (https://sketchfab.com/VertaScan)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/fighter-jet-b4179b7d076b401d832bbfa68c4bae25
Title: fighter jet
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame,  } from '@react-three/fiber'






export function Model(props) {
    
useFrame(({ clock }) => {
  const elapsedTime = clock.getElapsedTime();
  const speed = 0.2; // Slower speed for a larger circle
  
  if (jetRef.current) {
    // Large radius for a wider circular path
    const radius = 10;
    jetRef.current.position.x = Math.sin(elapsedTime * speed) * radius;
    jetRef.current.position.z = Math.sin(elapsedTime * speed) * radius;

    // Adjust rotation to face the direction of movement
    jetRef.current.rotation.y = Math.PI / 4 - (elapsedTime * speed);
  }
});
  const jetRef = useRef();
  const { nodes, materials } = useGLTF('/fighter_jet.glb')
  return (
    <group ref={jetRef} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <mesh geometry={nodes.Object_2.geometry} material={materials.engine_trim} />
        <mesh geometry={nodes.Object_3.geometry} material={materials.glass} />
        <mesh geometry={nodes.Object_4.geometry} material={materials.rusty} />
        <mesh geometry={nodes.Object_5.geometry} material={materials.trim1} />
        <mesh geometry={nodes.Object_6.geometry} material={materials.vents} />
        <mesh geometry={nodes.Object_7.geometry} material={materials.wings} />
        <mesh geometry={nodes.Object_8.geometry} material={materials.wings} />
        <mesh geometry={nodes.Object_9.geometry} material={materials.wings} />
        <mesh geometry={nodes.Object_10.geometry} material={materials.wings} />
      </group>
    </group>
  )
}

useGLTF.preload('/fighter_jet.glb')

export default Model
